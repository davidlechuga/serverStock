#  //PRIMERO CONSTUIR EL SCHEMA  DEL OBJETO.
# // QUERY PARA OBTENER OBJETOS CREADOS, SUS KEYS Y VALUES.
# // INPUT: ( ENTRADA  DE DATOS EN GRAPHQL  !REQUERIDOS
# // MUTATION PARA CREAR EL OBJETO DEL SCHEMA DESDE GRAPHQL
type Cliente {
    id: ID
    nombre: String
    edad: Int
    apellido: String
    empresa: String
    emails: [Email]
    tipo: TipoCliente
}

type Email {
    email: String
}

type Pedido {
    id: ID
    pedido: [PedidoProducto]
    total: Int
    fecha: String
    cliente: ID
    estado: EstadoPedido
}

type PedidoProducto {
    id: ID
    cantidad: Int
}

type Producto {
    id: ID 
    nombre: String!
    precio: Int!
    stock: Int!
}

type ClienteTotal {
    total: Float
    cliente: [Cliente]
}
type VendedorTotal {
    total: Float
    vendedor: [Usuario]
}

type Token {
    token : String!
}

type Usuario {
    usuario: String
    id: ID
    nombre: String
    rol: String
}

enum TipoCliente {
    BASICO
    PREMIUM 
}

enum EstadoPedido {
    PENDIENTE
    COMPLETADO
    CANCELADO
}

type Query {

    getClientes(limite: Int, offset: Int, vendedor: String) : [Cliente]
    getCliente(id: ID ) : Cliente 
    totalClientes(vendedor: String ): String

    #Productos
    obtenerProductos(limite: Int , offset: Int, stock: Boolean ) : [Producto]
    obtenerProducto (id: ID!) : Producto 
    totalProductos: String

    #pedidos
    obtenerPedidos (cliente: ID ) :[Pedido]

    #graficas

    topClientes : [ClienteTotal]
    topVendedores : [VendedorTotal]


    #Usuarios 
    obtenerUsuario: Usuario
}


input EmailInput {
    email: String
}

input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput]
    edad: Int!
    tipo: TipoCliente! 
    pedidos : [ PedidoInput]
    vendedor: ID
}

input ProductoInput {
    id: ID 
    nombre: String!
    precio: Int!
    stock: Int!
}

input PedidoInput {
    id: ID
    pedido: [PedidoProductoInput]
    total: Int
    fecha: String
    cliente: ID
    estado: EstadoPedido
    vendedor: ID
}

input PedidoProductoInput {
    id: ID
    cantidad: Int
}

type Mutation {
    # Te permite crear nuevos cliente
    crearCliente(input: ClienteInput) : Cliente
    # Te permite actualizar nuevos clientes
    actualizarCliente(input: ClienteInput) : Cliente
    # Te permite eliminar nuevos clientes
    eliminarCliente(id: ID!) : String
    # Te permite crear nuevos productos
    nuevoProducto (input: ProductoInput) : Producto
    actualizarProducto (input : ProductoInput) : Producto
    eliminarProducto (id: ID!) : String
    # Te permite crear nuevo pedidos
    nuevoPedido(input: PedidoInput) : Pedido
    actualizarEstado(input: PedidoInput) : String
    # Te permite crear nuevos usuarios
    crearUsuario(usuario: String!, nombre: String!,  password: String!, rol: String! ) : String
    autenticarUsuario(usuario: String!, password:String!): Token
}